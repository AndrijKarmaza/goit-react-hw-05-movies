{"version":3,"file":"static/js/936.5a8d3da3.chunk.js","mappings":"yRACA,EAA6B,yBAA7B,EAAqE,2B,SC2DrE,EApDa,WACX,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAuBjB,OArBAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,8GAE2BC,EAAAA,EAAAA,MAF3B,OAEUC,EAFV,OAGIT,EAAWS,GAHf,gDAKIP,GAAS,GALb,yBAOIE,GAAW,GACXM,EAAAA,QAAAA,SARJ,6EAFc,sBACdN,GAAW,GADG,mCAadO,EACD,GAAE,IAEHR,GAAWO,EAAAA,QAAAA,SAAiB,cAE5BT,GACEW,EAAAA,OAAAA,QAAe,8DAGf,iCACE,iDACA,eAAIC,UAAWC,EAAf,SACGf,EAAQgB,KAAI,gBAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,MAAaC,GAA7B,EAAuBC,KAAvB,EAA6BD,IAA7B,OACX,SAAC,KAAD,CAAeE,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMjB,GAAnD,UACE,gBAAaQ,UAAWC,EAAxB,WACE,gBACES,IACEP,EAAW,yCAC2BA,GAClCQ,EAENC,IAAKR,EACLd,QAAQ,UAEV,wBAAKc,MAVEC,IADAA,EADA,QAmBpB,C,+LCxDKQ,EAAW,+BACXC,EAAM,mCAENnB,EAAW,mCAAG,oGACKoB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,wCACsBC,IAF3B,cACZlB,EADY,yBAIXA,EAASoB,KAAKC,SAJH,2CAAH,qDAOXC,EAAmB,mCAAG,WAAMC,GAAN,uFACHJ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeC,EADf,kBAC4BK,IAFzB,cACpBvB,EADoB,yBAInBA,EAASoB,KAAKC,SAJK,2CAAH,sDAOnBG,EAAgB,mCAAG,WAAMC,GAAN,uFACAN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAQ,EADA,oBACmBP,IAFnB,cACjBlB,EADiB,yBAIhBA,EAASoB,MAJO,2CAAH,sDAOhBM,EAAc,mCAAG,WAAMD,GAAN,uFACEN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAQ,EADA,4BAC2BP,IAF7B,cACflB,EADe,yBAIdA,EAASoB,KAAKO,MAJA,2CAAH,sDAOdC,EAAiB,mCAAG,WAAMH,GAAN,uFACDN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAQ,EADA,4BAC2BP,IAF1B,cAClBlB,EADkB,yBAIjBA,EAASoB,KAAKC,SAJG,2CAAH,qD","sources":["webpack://react-homework-template/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx","servises/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie_list\":\"Home_movie_list__mT20B\",\"gallery_item\":\"Home_gallery_item__Wfa+y\"};","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { fetchMovies } from '../../servises/api.js';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport moviePoster from '../../images/movie-poster.png';\nimport css from './Home.module.css';\n\nconst Home = () => {\n  const [topList, setTopList] = useState([]);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    setLoading(true);\n    async function getToplist() {\n      try {\n        const response = await fetchMovies();\n        setTopList(response);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoading(false);\n        Loading.remove();\n      }\n    }\n    getToplist();\n  }, []);\n\n  loading && Loading.standard('Loading...');\n\n  error &&\n    Notify.failure('Oops! Something went wrong. Please try reloading the page');\n\n  return (\n    <>\n      <h1>Weekly movie trends</h1>\n      <ul className={css.movie_list}>\n        {topList.map(({ poster_path, title, name, id }) => (\n          <Link key={id} to={`/movies/${id}`} state={{ from: location }}>\n            <li key={id} className={css.gallery_item}>\n              <img\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                    : moviePoster\n                }\n                alt={title}\n                loading=\"lazy\"\n              />\n              <h2>{title}</h2>\n            </li>\n          </Link>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '24332f5bdb5cb6313d5fde27ff166678';\n\nconst fetchMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/week?api_key=${KEY}`\n  );\n  return response.data.results;\n};\n\nconst fetchMoviesForQuery = async value => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${value}`\n  );\n  return response.data.results;\n};\n\nconst fetchMovieDetail = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${KEY}`\n  );\n  return response.data;\n};\n\nconst fetchMovieCast = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`\n  );\n  return response.data.cast;\n};\n\nconst fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`\n  );\n  return response.data.results;\n};\n\nexport {\n  fetchMovies,\n  fetchMoviesForQuery,\n  fetchMovieDetail,\n  fetchMovieCast,\n  fetchMovieReviews,\n};\n"],"names":["useState","topList","setTopList","error","setError","loading","setLoading","location","useLocation","useEffect","fetchMovies","response","Loading","getToplist","Notify","className","css","map","poster_path","title","id","name","to","state","from","src","moviePoster","alt","BASE_URL","KEY","axios","data","results","fetchMoviesForQuery","value","fetchMovieDetail","movieId","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}