{"version":3,"file":"static/js/947.0796aa24.chunk.js","mappings":"mPAkEA,UA5DqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,YAAlC,eAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAO,qBADIC,EAAAA,EAAAA,MACQC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAgBxC,IAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,6GAE2BC,EAAAA,EAAAA,IAAA,UAClBC,EAAAA,GADkB,kBACAX,EADA,oBACmBY,EAAAA,KAH9C,OAEUC,EAFV,OAKIT,EAAaS,EAASC,MAL1B,gDAOIC,QAAQC,MAAR,MAPJ,0DADc,uBAAC,WAAD,wBAWdC,EACD,GAAE,CAACjB,IAECG,EAAL,CAIA,IAAQe,EAAuDf,EAAvDe,YAAaC,EAA0ChB,EAA1CgB,MAAOC,EAAmCjB,EAAnCiB,aAAcC,EAAqBlB,EAArBkB,SACpCC,EADyDnB,EAAXoB,OAC1BC,SAAQ,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MAE5D,OACE,iCACE,SAAC,KAAD,CAAMC,GAAIvB,EAAV,mBACA,4BACE,gBACEwB,IAAKX,EAAW,UAAMY,EAAAA,IAAN,OAAqBZ,GAAgBa,EACrDC,IAAKb,KAEP,wBAAKA,KACL,yCAAgC,GAAfC,GAAmBa,QAAQ,GAA5C,QACA,qCACA,uBAAIX,KACJ,uCACA,uBAAID,QAEN,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMO,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAIN,SAAC,EAAAM,SAAD,WACE,SAAC,KAAD,QAhCL,CAoCF,C,uGChED,IAAMvB,EAAW,+BACXC,EAAM,mCACNkB,EAAe,iC","sources":["components/MovieDetails/MovieDetails.jsx","components/servises/api.js"],"sourcesContent":["import axios from 'axios';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { BASE_URL, KEY, BASE_IMG_URL } from '../servises/api.js';\nimport moviePoster from '../../images/movie-poster.png';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieData, setMovieData] = useState();\n  const location = useLocation();\n  const backWay = location.state?.from ?? '/';\n\n  useEffect(() => {\n    async function getMovieData() {\n      try {\n        const response = await axios.get(\n          `${BASE_URL}/movie/${movieId}?api_key=${KEY}`\n        );\n        setMovieData(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    getMovieData();\n  }, [movieId]);\n\n  if (!movieData) {\n    return;\n  }\n\n  const { poster_path, title, vote_average, overview, genres } = movieData;\n  const genresList = genres.flatMap(genre => genre.name).join(', ');\n\n  return (\n    <>\n      <Link to={backWay}>Back</Link>\n      <div>\n        <img\n          src={poster_path ? `${BASE_IMG_URL}${poster_path}` : moviePoster}\n          alt={title}\n        />\n        <h1>{title}</h1>\n        <p>User Score: {(vote_average * 10).toFixed(0)}%</p>\n        <h2>Genres:</h2>\n        <p>{genresList}</p>\n        <h2>Overview:</h2>\n        <p>{overview}</p>\n      </div>\n      <div>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '24332f5bdb5cb6313d5fde27ff166678';\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w300';\n\nexport { BASE_URL, KEY, BASE_IMG_URL };\n"],"names":["movieId","useParams","useState","movieData","setMovieData","backWay","useLocation","state","from","useEffect","axios","BASE_URL","KEY","response","data","console","error","getMovieData","poster_path","title","vote_average","overview","genresList","genres","flatMap","genre","name","join","to","src","BASE_IMG_URL","moviePoster","alt","toFixed","Suspense"],"sourceRoot":""}