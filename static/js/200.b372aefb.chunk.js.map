{"version":3,"file":"static/js/200.b372aefb.chunk.js","mappings":"wQACA,EAA4B,wBAA5B,EAAqE,6BAArE,EAA6G,uB,SCgE7G,EAzDa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAkCE,EAAAA,EAAAA,YAAlC,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAuBA,IArBAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,8GAE2BC,EAAAA,EAAAA,IAAeV,GAF1C,OAEUW,EAFV,OAGIP,EAAaO,GAHjB,gDAKIL,GAAS,GALb,yBAOIE,GAAW,GACXI,EAAAA,QAAAA,SARJ,6EAFc,sBACdJ,GAAW,GADG,mCAadK,EACD,GAAE,CAACb,IAEJO,GAAWK,EAAAA,QAAAA,SAAiB,cAE5BP,GACES,EAAAA,OAAAA,QAAe,6DAEZX,IAAaE,EAIlB,OAAyB,IAArBF,EAAUY,QACL,0DAIP,eAAIC,UAAWC,EAAf,SACGd,EAAUe,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,GAAlC,OACb,gBAAaN,UAAWC,EAAxB,WACE,gBACEM,IACEJ,EAAY,yCAC0BA,G,q6WAGxCK,IAAKJ,EACLJ,UAAWC,KAEb,wBAAKG,KACL,uCAAeC,OAXRC,EADI,KAiBpB,C,+LC7DKG,EAAW,+BACXC,EAAM,mCAENC,EAAW,mCAAG,oGACKC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,wCACsBC,IAF3B,cACZf,EADY,yBAIXA,EAASkB,KAAKC,SAJH,2CAAH,qDAOXC,EAAmB,mCAAG,WAAMC,GAAN,uFACHJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBAC4BM,IAFzB,cACpBrB,EADoB,yBAInBA,EAASkB,KAAKC,SAJK,2CAAH,sDAOnBG,EAAgB,mCAAG,WAAMjC,GAAN,uFACA4B,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAzB,EADA,oBACmB0B,IAFnB,cACjBf,EADiB,yBAIhBA,EAASkB,MAJO,2CAAH,sDAOhBnB,EAAc,mCAAG,WAAMV,GAAN,uFACE4B,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAzB,EADA,4BAC2B0B,IAF7B,cACff,EADe,yBAIdA,EAASkB,KAAKK,MAJA,2CAAH,sDAOdC,EAAiB,mCAAG,WAAMnC,GAAN,uFACD4B,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAzB,EADA,4BAC2B0B,IAF1B,cAClBf,EADkB,yBAIjBA,EAASkB,KAAKC,SAJG,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","servises/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast_list\":\"Cast_cast_list__6yHmm\",\"cast_list_item\":\"Cast_cast_list_item__uLsOE\",\"cast_img\":\"Cast_cast_img__fJUn3\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from '../../servises/api.js';\nimport avatarCasts from '../../images/avatar_casts.png';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [movieCast, setMovieCast] = useState();\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    async function getMovieCast() {\n      try {\n        const response = await fetchMovieCast(movieId);\n        setMovieCast(response);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoading(false);\n        Loading.remove();\n      }\n    }\n    getMovieCast();\n  }, [movieId]);\n\n  loading && Loading.standard('Loading...');\n\n  error &&\n    Notify.failure('Oops! Something went wrong. Please try reloading the page');\n\n  if (!movieCast || error) {\n    return;\n  }\n\n  if (movieCast.length === 0) {\n    return <h3>No cast found for this movie</h3>;\n  }\n\n  return (\n    <ul className={css.cast_list}>\n      {movieCast.map(({ profile_path, name, character, id }) => (\n        <li key={id} className={css.cast_list_item}>\n          <img\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/w300${profile_path}`\n                : avatarCasts\n            }\n            alt={name}\n            className={css.cast_img}\n          />\n          <h2>{name}</h2>\n          <p>Character: {character}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '24332f5bdb5cb6313d5fde27ff166678';\n\nconst fetchMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/week?api_key=${KEY}`\n  );\n  return response.data.results;\n};\n\nconst fetchMoviesForQuery = async value => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${value}`\n  );\n  return response.data.results;\n};\n\nconst fetchMovieDetail = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${KEY}`\n  );\n  return response.data;\n};\n\nconst fetchMovieCast = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`\n  );\n  return response.data.cast;\n};\n\nconst fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`\n  );\n  return response.data.results;\n};\n\nexport {\n  fetchMovies,\n  fetchMoviesForQuery,\n  fetchMovieDetail,\n  fetchMovieCast,\n  fetchMovieReviews,\n};\n"],"names":["movieId","useParams","useState","movieCast","setMovieCast","error","setError","loading","setLoading","useEffect","fetchMovieCast","response","Loading","getMovieCast","Notify","length","className","css","map","profile_path","name","character","id","src","alt","BASE_URL","KEY","fetchMovies","axios","data","results","fetchMoviesForQuery","value","fetchMovieDetail","cast","fetchMovieReviews"],"sourceRoot":""}