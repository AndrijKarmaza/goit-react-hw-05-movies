{"version":3,"file":"static/js/278.89763c43.chunk.js","mappings":"uNAAA,IAAMA,EAAW,+BACXC,EAAM,mCACNC,EAAe,iC,qJCkFrB,UA5Ee,WACb,OAAkCC,EAAAA,EAAAA,YAAlC,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,MAqCjB,OAnCAC,EAAAA,EAAAA,YAAU,WACR,GAAKJ,EAAL,CAEQ,IAESK,EAFV,mCAEL,6GAE2BC,EAAAA,EAAAA,IAAA,UAClBnB,EAAAA,GADkB,iCACeC,EAAAA,GADf,kBAC4BY,IAHvD,OAEUO,EAFV,OAKIf,EAAae,EAASC,KAAKC,SAL/B,gDAOIf,GAAS,GAPb,yBASIE,GAAW,GACXc,EAAAA,QAAAA,SAVJ,4EAFK,qDACLd,GAAW,GAcXS,GACD,CACF,GAAE,CAACL,IAEJL,GAAWe,EAAAA,QAAAA,SAAiB,cAE5BjB,GACEkB,EAAAA,OAAAA,QAAe,8DAWf,iCACE,kBAAMC,SAVV,SAAsBC,GACpBA,EAAIC,iBACJ,IAAQd,EAAUa,EAAIE,cAAcC,SAAShB,MAArCA,MACS,KAAjBA,EAAMiB,OACFN,EAAAA,OAAAA,QAAe,+BACfZ,EAAgB,CAAEC,MAAOA,EAAMiB,SACnCJ,EAAIE,cAAcG,OACnB,EAGG,WACE,kBACEC,KAAK,OACLC,KAAK,QACLC,aAAa,MACbC,WAAS,EACTC,YAAY,kBAEd,mBAAQJ,KAAK,SAAb,uBAED5B,IACC,wBACGA,EAAUiC,KAAI,gBAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,GAAvB,OACb,SAAC,KAAD,CAAeC,GAAE,UAAKD,GAAME,MAAO,CAAEC,KAAM5B,GAA3C,UACE,2BACE,gBACE6B,IACEN,EAAW,UAAMpC,EAAAA,IAAN,OAAqBoC,GAAgBO,EAElDC,IAAKP,KAEP,wBAAKA,MAPEC,IADAA,EADE,QAiBxB,C","sources":["components/servises/api.js","pages/Movies/Movies.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '24332f5bdb5cb6313d5fde27ff166678';\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w300';\n\nexport { BASE_URL, KEY, BASE_IMG_URL };\n","import { useEffect, useState } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { BASE_URL, KEY, BASE_IMG_URL } from '../../components/servises/api.js';\nimport moviePoster from '../../images/movie-poster.png';\nimport axios from 'axios';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\n\nconst Movies = () => {\n  const [movieList, setMovieList] = useState();\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const value = searchParams.get('value');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!value) {\n      return;\n    } else {\n      setLoading(true);\n      async function getMovieList() {\n        try {\n          const response = await axios.get(\n            `${BASE_URL}/search/movie?api_key=${KEY}&query=${value}`\n          );\n          setMovieList(response.data.results);\n        } catch (error) {\n          setError(true);\n        } finally {\n          setLoading(false);\n          Loading.remove();\n        }\n      }\n      getMovieList();\n    }\n  }, [value]);\n\n  loading && Loading.standard('Loading...');\n\n  error &&\n    Notify.failure('Oops! Something went wrong. Please try reloading the page');\n\n  function onFormSubmit(evt) {\n    evt.preventDefault();\n    const { value } = evt.currentTarget.elements.value;\n    value.trim() === ''\n      ? Notify.failure('Enter the name of the movie')\n      : setSearchParams({ value: value.trim() });\n    evt.currentTarget.reset();\n  }\n  return (\n    <>\n      <form onSubmit={onFormSubmit}>\n        <input\n          type=\"text\"\n          name=\"value\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {movieList && (\n        <ul>\n          {movieList.map(({ poster_path, title, id }) => (\n            <Link key={id} to={`${id}`} state={{ from: location }}>\n              <li key={id}>\n                <img\n                  src={\n                    poster_path ? `${BASE_IMG_URL}${poster_path}` : moviePoster\n                  }\n                  alt={title}\n                />\n                <h2>{title}</h2>\n              </li>\n            </Link>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","KEY","BASE_IMG_URL","useState","movieList","setMovieList","error","setError","loading","setLoading","useSearchParams","searchParams","setSearchParams","value","get","location","useLocation","useEffect","getMovieList","axios","response","data","results","Loading","Notify","onSubmit","evt","preventDefault","currentTarget","elements","trim","reset","type","name","autoComplete","autoFocus","placeholder","map","poster_path","title","id","to","state","from","src","moviePoster","alt"],"sourceRoot":""}