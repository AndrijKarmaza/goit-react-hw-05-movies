{"version":3,"file":"static/js/544.1f47160a.chunk.js","mappings":"uNAAA,IAAMA,EAAW,+BACXC,EAAM,mCACNC,EAAe,iC,4ICoDrB,UA/Ca,WACX,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MA0BjB,OAxBAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,+GAE2BC,EAAAA,EAAAA,IAAA,UAClBb,EAAAA,GADkB,wCACsBC,EAAAA,KAHjD,OAEUa,EAFV,OAKYC,EAAYD,EAASE,KAArBD,QACRV,EAAWU,GANf,gDAQIR,GAAS,GARb,yBAUIE,GAAW,GACXQ,EAAAA,QAAAA,SAXJ,6EAFc,sBACdR,GAAW,GADG,mCAgBdS,EACD,GAAE,IAEHV,GAAWS,EAAAA,QAAAA,SAAiB,cAE5BX,GACEa,EAAAA,OAAAA,QAAe,8DAGf,iCACE,iDACA,wBACGf,EAAQgB,KAAI,gBAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,MAAaC,GAA7B,EAAuBC,KAAvB,EAA6BD,IAA7B,OACX,SAAC,KAAD,CAAeE,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMjB,GAAnD,UACE,2BACE,gBAAKkB,IAAG,UAAK1B,EAAAA,IAAL,OAAoBmB,GAAeQ,IAAKP,KAChD,wBAAKA,MAFEC,IADAA,EADA,QAWpB,C","sources":["components/servises/api.js","pages/Home/Home.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '24332f5bdb5cb6313d5fde27ff166678';\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w300';\n\nexport { BASE_URL, KEY, BASE_IMG_URL };\n","import axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { BASE_URL, KEY, BASE_IMG_URL } from '../../components/servises/api.js';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\n\nconst Home = () => {\n  const [topList, setTopList] = useState([]);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    setLoading(true);\n    async function getToplist() {\n      try {\n        const response = await axios.get(\n          `${BASE_URL}/trending/movie/week?api_key=${KEY}`\n        );\n        const { results } = response.data;\n        setTopList(results);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoading(false);\n        Loading.remove();\n      }\n    }\n    getToplist();\n  }, []);\n\n  loading && Loading.standard('Loading...');\n\n  error &&\n    Notify.failure('Oops! Something went wrong. Please try reloading the page');\n\n  return (\n    <>\n      <h1>Weekly movie trends</h1>\n      <ul>\n        {topList.map(({ poster_path, title, name, id }) => (\n          <Link key={id} to={`/movies/${id}`} state={{ from: location }}>\n            <li key={id}>\n              <img src={`${BASE_IMG_URL}${poster_path}`} alt={title} />\n              <h2>{title}</h2>\n            </li>\n          </Link>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["BASE_URL","KEY","BASE_IMG_URL","useState","topList","setTopList","error","setError","loading","setLoading","location","useLocation","useEffect","axios","response","results","data","Loading","getToplist","Notify","map","poster_path","title","id","name","to","state","from","src","alt"],"sourceRoot":""}