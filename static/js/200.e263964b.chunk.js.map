{"version":3,"file":"static/js/200.e263964b.chunk.js","mappings":"iRACA,EAA4B,wBAA5B,EAAqE,6BAArE,EAA6G,uB,SC2D7G,EAnDa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAkCE,EAAAA,EAAAA,YAAlC,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAyBA,IAvBAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,6GAE2BC,EAAAA,EAAAA,IAAA,UAClBC,EAAAA,GADkB,kBACAX,EADA,4BAC2BY,EAAAA,KAHtD,OAEUC,EAFV,OAKIT,EAAaS,EAASC,KAAKC,MAL/B,gDAOIT,GAAS,GAPb,yBASIE,GAAW,GACXQ,EAAAA,QAAAA,SAVJ,6EAFc,sBACdR,GAAW,GADG,mCAedS,EACD,GAAE,CAACjB,IAEJO,GAAWS,EAAAA,QAAAA,SAAiB,cAE5BX,GACEa,EAAAA,OAAAA,QAAe,6DAEZf,IAAaE,EAIlB,OACE,eAAIc,UAAWC,EAAf,SACGjB,EAAUkB,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,GAAlC,OACb,gBAAaN,UAAWC,EAAxB,WACE,gBACEM,IAAKJ,EAAY,UAAMK,EAAAA,IAAN,OAAqBL,G,q6WACtCM,IAAKL,EACLJ,UAAWC,KAEb,wBAAKG,KACL,uCAAeC,OAPRC,EADI,KAapB,C,uGC1DD,IAAMd,EAAW,+BACXC,EAAM,mCACNe,EAAe,iC","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","components/servises/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast_list\":\"Cast_cast_list__6yHmm\",\"cast_list_item\":\"Cast_cast_list_item__uLsOE\",\"cast_img\":\"Cast_cast_img__fJUn3\"};","import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { BASE_URL, KEY, BASE_IMG_URL } from '../servises/api.js';\nimport avatarCasts from '../../images/avatar_casts.png';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [movieCast, setMovieCast] = useState();\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    async function getMovieCast() {\n      try {\n        const response = await axios.get(\n          `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`\n        );\n        setMovieCast(response.data.cast);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoading(false);\n        Loading.remove();\n      }\n    }\n    getMovieCast();\n  }, [movieId]);\n\n  loading && Loading.standard('Loading...');\n\n  error &&\n    Notify.failure('Oops! Something went wrong. Please try reloading the page');\n\n  if (!movieCast || error) {\n    return;\n  }\n\n  return (\n    <ul className={css.cast_list}>\n      {movieCast.map(({ profile_path, name, character, id }) => (\n        <li key={id} className={css.cast_list_item}>\n          <img\n            src={profile_path ? `${BASE_IMG_URL}${profile_path}` : avatarCasts}\n            alt={name}\n            className={css.cast_img}\n          />\n          <h2>{name}</h2>\n          <p>Character: {character}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Cast;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '24332f5bdb5cb6313d5fde27ff166678';\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w300';\n\nexport { BASE_URL, KEY, BASE_IMG_URL };\n"],"names":["movieId","useParams","useState","movieCast","setMovieCast","error","setError","loading","setLoading","useEffect","axios","BASE_URL","KEY","response","data","cast","Loading","getMovieCast","Notify","className","css","map","profile_path","name","character","id","src","BASE_IMG_URL","alt"],"sourceRoot":""}